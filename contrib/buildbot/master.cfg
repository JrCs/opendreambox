def runOEImage(factory, machine, image, libc):
    defaultenv['ANGSTROMLIBC'] = libc
    factory.addStep(ShellCommand, description=["Building", machine, image], command=["/home/buildbot/scripts/full-oe-autobuild", image, machine], env=copy.copy(defaultenv), timeout=10000)

import copy

builders = []
defaultenv = {}

config = BuildmasterConfig = {}

config['projectName'] = "HaeRWu buildbot"
config['buildbotURL'] = "http://localhost:8010/"

from buildbot.buildslave           import BuildSlave
from buildbot.changes.pb           import PBChangeSource
from buildbot.scheduler            import Scheduler
from buildbot.scheduler            import Periodic
from buildbot.scheduler            import Nightly
from buildbot.process              import factory
from buildbot.process              import buildstep as step
from buildbot.steps.source         import SVN
from buildbot.steps.python_twisted import Trial
from buildbot.steps.shell          import Compile, ShellCommand 
from buildbot.steps                import source, shell

config['slaves'] = [BuildSlave("homeQuad", "BOT-PASSWORD")]
config['slavePortnum'] = 9989

config['change_source'] = PBChangeSource()

config['schedulers'] = []

config['schedulers'].append(Nightly(name="Angstrom glibc full build",
                                 hour=23, minute=0, dayOfWeek=[0,2,4],
                                 builderNames=["angstrom_glibc_full_build"]))

config['schedulers'].append(Nightly(name="Angstrom glibc incremental build",
                                 hour=5, minute=0, dayOfWeek=[0,2,4],
                                 builderNames=["angstrom_glibc_incremental_build"]))

config['schedulers'].append(Nightly(name="Angstrom uclibc full build",
                                 hour=23, minute=0, dayOfWeek=[1,3,5],
                                 builderNames=["angstrom_uclibc_full_build"]))

config['schedulers'].append(Nightly(name="Angstrom uclibc incremental build",
                                 hour=5, minute=0, dayOfWeek=[1,3,5],
                                 builderNames=["angstrom_uclibc_incremental_build"]))


angstrom_glibc_incremental_build = factory.BuildFactory()
angstrom_glibc_incremental_build.addStep(source.Git(repourl="git://git.openembedded.net/openembedded", branch='stable/2009', mode='update'))

angstrom_glibc_incremental_build.addStep(ShellCommand, description=["Cleaning", "previous", "images"],  command="/bin/rm tmp/deploy/images/*/*/*rootfs* || /bin/true", timeout=600)
angstrom_glibc_incremental_build.addStep(ShellCommand, description=["Cleaning", "previous", "images", "step 2"],  command="/bin/rm -rf tmp/deploy/images/*/*/*testlab* || /bin/true", timeout=600)
runOEImage(angstrom_glibc_incremental_build, 'at91sam9263ek', 'base-image', 'glibc')
runOEImage(angstrom_glibc_incremental_build, 'at91sam9263ek', 'console-image', 'glibc')
runOEImage(angstrom_glibc_incremental_build, 'at91sam9263ek', 'x11-image', 'glibc')
runOEImage(angstrom_glibc_incremental_build, 'beagleboard', 'base-image', 'glibc')
runOEImage(angstrom_glibc_incremental_build, 'beagleboard', 'console-image', 'glibc')
runOEImage(angstrom_glibc_incremental_build, 'beagleboard', 'x11-image', 'glibc')
runOEImage(angstrom_glibc_incremental_build, 'qemux86', 'base-image', 'glibc')
runOEImage(angstrom_glibc_incremental_build, 'qemux86', 'console-image', 'glibc')
runOEImage(angstrom_glibc_incremental_build, 'qemux86', 'x11-image', 'glibc')

angstrom_glibc_full_build = factory.BuildFactory()
angstrom_glibc_full_build.addStep(source.Git(repourl="git://git.openembedded.net/openembedded", branch='stable/2009', mode='update'))

angstrom_glibc_full_build.addStep(ShellCommand, description=["Cleaning", "previous", "images"],  command="/bin/rm tmp/deploy/images/*/*/*rootfs* || /bin/true", timeout=600)
angstrom_glibc_full_build.addStep(ShellCommand, description=["Cleaning", "previous", "images", "step 2"],  command="/bin/rm -rf tmp/deploy/images/*/*/*testlab* || /bin/true", timeout=600)
runOEImage(angstrom_glibc_full_build, 'at91sam9263ek', 'base-image', 'glibc')
runOEImage(angstrom_glibc_full_build, 'at91sam9263ek', 'console-image', 'glibc')
runOEImage(angstrom_glibc_full_build, 'at91sam9263ek', 'x11-image', 'glibc')
runOEImage(angstrom_glibc_full_build, 'beagleboard', 'base-image', 'glibc')
runOEImage(angstrom_glibc_full_build, 'beagleboard', 'console-image', 'glibc')
runOEImage(angstrom_glibc_full_build, 'beagleboard', 'x11-image', 'glibc')
runOEImage(angstrom_glibc_full_build, 'qemux86', 'base-image', 'glibc')
runOEImage(angstrom_glibc_full_build, 'qemux86', 'console-image', 'glibc')
runOEImage(angstrom_glibc_full_build, 'qemux86', 'x11-image', 'glibc')

angstrom_uclibc_incremental_build = factory.BuildFactory()
angstrom_uclibc_incremental_build.addStep(source.Git(repourl="git://git.openembedded.net/openembedded", branch='stable/2009', mode='update'))

angstrom_uclibc_incremental_build.addStep(ShellCommand, description=["Cleaning", "previous", "images"],  command="/bin/rm tmp/deploy/images/*/*/*rootfs* || /bin/true", timeout=600)
angstrom_uclibc_incremental_build.addStep(ShellCommand, description=["Cleaning", "previous", "images", "step 2"],  command="/bin/rm -rf tmp/deploy/images/*/*/*testlab* || /bin/true", timeout=600)
runOEImage(angstrom_uclibc_incremental_build, 'atngw100', 'base-image', 'uclibc')
runOEImage(angstrom_uclibc_incremental_build, 'atngw100', 'console-image', 'uclibc')
runOEImage(angstrom_uclibc_incremental_build, 'atngw100', 'x11-image', 'uclibc')
runOEImage(angstrom_uclibc_incremental_build, 'at91sam9263ek', 'base-image', 'uclibc')
runOEImage(angstrom_uclibc_incremental_build, 'at91sam9263ek', 'console-image', 'uclibc')
runOEImage(angstrom_uclibc_incremental_build, 'at91sam9263ek', 'x11-image', 'uclibc')
runOEImage(angstrom_uclibc_incremental_build, 'beagleboard', 'base-image', 'uclibc')
runOEImage(angstrom_uclibc_incremental_build, 'beagleboard', 'console-image', 'uclibc')
runOEImage(angstrom_uclibc_incremental_build, 'beagleboard', 'x11-image', 'uclibc')
runOEImage(angstrom_uclibc_incremental_build, 'qemux86', 'base-image', 'uclibc')
runOEImage(angstrom_uclibc_incremental_build, 'qemux86', 'console-image', 'uclibc')
runOEImage(angstrom_uclibc_incremental_build, 'qemux86', 'x11-image', 'uclibc')

angstrom_uclibc_full_build = factory.BuildFactory()
angstrom_uclibc_full_build.addStep(source.Git(repourl="git://git.openembedded.net/openembedded", branch='stable/2009', mode='update'))

angstrom_uclibc_full_build.addStep(ShellCommand, description=["Cleaning", "previous", "images"],  command="/bin/rm tmp/deploy/images/*/*/*rootfs* || /bin/true", timeout=600)
angstrom_uclibc_full_build.addStep(ShellCommand, description=["Cleaning", "previous", "images", "step 2"],  command="/bin/rm -rf tmp/deploy/images/*/*/*testlab* || /bin/true", timeout=600)
runOEImage(angstrom_uclibc_full_build, 'atngw100', 'base-image', 'uclibc')
runOEImage(angstrom_uclibc_full_build, 'atngw100', 'console-image', 'uclibc')
runOEImage(angstrom_uclibc_full_build, 'atngw100', 'x11-image', 'uclibc')
runOEImage(angstrom_uclibc_full_build, 'at91sam9263ek', 'base-image', 'uclibc')
runOEImage(angstrom_uclibc_full_build, 'at91sam9263ek', 'console-image', 'uclibc')
runOEImage(angstrom_uclibc_full_build, 'at91sam9263ek', 'x11-image', 'uclibc')
runOEImage(angstrom_uclibc_full_build, 'beagleboard', 'base-image', 'uclibc')
runOEImage(angstrom_uclibc_full_build, 'beagleboard', 'console-image', 'uclibc')
runOEImage(angstrom_uclibc_full_build, 'beagleboard', 'x11-image', 'uclibc')
runOEImage(angstrom_uclibc_full_build, 'qemux86', 'base-image', 'uclibc')
runOEImage(angstrom_uclibc_full_build, 'qemux86', 'console-image', 'uclibc')
runOEImage(angstrom_uclibc_full_build, 'qemux86', 'x11-image', 'uclibc')
#---------------------------------------------------------------------

build_agf = {
        'name':      "angstrom_glibc_full_build",
        'slavename': "homeQuad",
        'builddir':  "angstrom_glibc_full_build",
        'factory':    angstrom_glibc_full_build,
}

build_agi = {
        'name':      "angstrom_glibc_incremental_build",
        'slavename': "homeQuad",
        'builddir':  "angstrom_glibc_incremental_build",
        'factory':    angstrom_glibc_incremental_build,
}
build_auf = {
        'name':      "angstrom_uclibc_full_build",
        'slavename': "homeQuad",
        'builddir':  "angstrom_uclibc_full_build",
        'factory':    angstrom_uclibc_full_build,
}

build_aui = {
        'name':      "angstrom_uclibc_incremental_build",
        'slavename': "homeQuad",
        'builddir':  "angstrom_uclibc_incremental_build",
        'factory':    angstrom_uclibc_incremental_build,
}

config['builders'] = [build_agf, build_agi, build_auf, build_aui ]
config['status'] = []
config['debugPassword'] = ""

from buildbot.status import html

config['status'].append(html.Waterfall(http_port=8010))
config['status'].append(html.Waterfall(http_port=8011, allowForce=False))

