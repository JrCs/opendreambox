diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/common/Common.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/common/Common.java
--- src/net/sourceforge/dvb/projectx/common/Common.java	2006-03-30 18:04:34.000000000 +0200
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/common/Common.java	2008-09-08 13:02:38.000000000 +0200
@@ -233,9 +233,13 @@
 	{
 		StatusString = Resource.getString("run.status");
 
+		System.out.println("scan");
 		scan = new Scan();
-		subpicture = new Subpicture();
+		System.out.println("subtitle");
+//		subpicture = new Subpicture();
+		System.out.println("mpv decoder");
 		mpvdecoder = new MpvDecoder();
+		System.out.println("color models");
 		subpicture_colormodels = loadColorModels();
 	}
 
@@ -285,8 +289,8 @@
 		guiInterface = new GuiInterface(showGUI);
 
 		//load gui
-		if (showGUI())
-			getGuiInterface().loadGui();
+//		if (showGUI())
+//			getGuiInterface().loadGui();
 	}
 
 	/**
@@ -1363,7 +1367,7 @@
 	{
 		List list = new ArrayList();
 
-		list.add("Java Environment");
+/*		list.add("Java Environment");
 		list.add(getDateAndTime());
 		list.add(Resource.getString("javaev.java.version") + "\t" + System.getProperty("java.version"));
 		list.add(Resource.getString("javaev.java.vendor") + "\t" + System.getProperty("java.vendor"));
@@ -1390,7 +1394,7 @@
 		list.add(Resource.getString("javaev.java.user.lang") + "\t" + Resource.getChosenLanguage());
 		list.add(Resource.getString("javaev.java.user.name") + "\t" + System.getProperty("user.name"));
 		list.add(Resource.getString("javaev.java.user.home") + "\t" + System.getProperty("user.home"));
-
+*/
 		return list.toArray();
 	}
 
@@ -1482,7 +1486,9 @@
 
 		ProcessedPercent = percent;
 
-		getGuiInterface().updateProgressBar(ProcessedPercent);
+		System.out.println("[PROGRESS] " + ProcessedPercent);
+
+//		getGuiInterface().updateProgressBar(ProcessedPercent);
 	}
 
 	/**
@@ -1493,7 +1499,8 @@
 	public static void updateProgressBar(String str)
 	{
 		setStatusString(str);
-		getGuiInterface().updateProgressBar(str);
+		System.out.println("[PROGRESS] " + str);
+//		getGuiInterface().updateProgressBar(str);
 	}
 
 	/**
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/common/JobCollection.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/common/JobCollection.java
--- src/net/sourceforge/dvb/projectx/common/JobCollection.java	2006-01-29 21:36:04.000000000 +0100
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/common/JobCollection.java	2006-12-16 14:28:58.000000000 +0100
@@ -730,7 +730,7 @@
 			setDebugLogStream(getOutputDirectory() + getFileSeparator() + str + "_biglog.txt");
 		} 
 
-		//settings übergeben!!
+		//settings bergeben!!
 		if (Common.getSettings().getBooleanProperty(Keys.KEY_NormalLog))
 		{
 			if (Common.getSettings().getBooleanProperty(Keys.KEY_ExternPanel_createVdrIndex) && Common.getSettings().getIntProperty(Keys.KEY_ConversionMode) == 1)
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/common/Keys.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/common/Keys.java
--- src/net/sourceforge/dvb/projectx/common/Keys.java	2006-03-28 19:53:12.000000000 +0200
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/common/Keys.java	2006-12-16 14:30:19.000000000 +0100
@@ -287,14 +287,14 @@
 	public final static String[] KEY_AudioPanel_replaceAc3withSilence = { "AudioPanel.replaceAc3withSilence", "0" }; //cbox[10] 
 	public final static String[] KEY_AudioPanel_allowSpaces = { "AudioPanel.allowSpaces", "0" }; //cbox[69] 
 	public final static String[] KEY_AudioPanel_addRiffToAc3 = { "AudioPanel.addRiffToAc3", "0" }; //cbox[12] 
-	public final static String[] KEY_AudioPanel_addRiffToMpgAudio = { "AudioPanel.addRiffToMpgAudioL12", "0" }; //cbox[4] + rbutton[14] riff für layer1+2
+	public final static String[] KEY_AudioPanel_addRiffToMpgAudio = { "AudioPanel.addRiffToMpgAudioL12", "0" }; //cbox[4] + rbutton[14] riff fr layer1+2
 	public final static String[] KEY_AudioPanel_pitchAudio = { "AudioPanel.pitchAudio", "0" }; //cbox[51] 
 	public final static String[] KEY_AudioPanel_Normalize = { "AudioPanel.decodeMpgAudio.Normalize", "0" }; //rbutton[2] + exefield[8] normalize
 	public final static String[] KEY_AudioPanel_Downmix = { "AudioPanel.decodeMpgAudio.Downmix", "0" }; //rbutton[3] 
 	public final static String[] KEY_AudioPanel_changeByteorder = { "AudioPanel.decodeMpgAudio.changeByteorder", "0" }; //rbutton[4] 
 	public final static String[] KEY_AudioPanel_addRiffHeader = { "AudioPanel.decodeMpgAudio.addRiffHeader", "1" }; //rbutton[5] 
 	public final static String[] KEY_AudioPanel_addAiffHeader = { "AudioPanel.decodeMpgAudio.addAiffHeader", "0" }; //rbutton[9] 
-	public final static String[] KEY_AudioPanel_addRiffToMpgAudioL3 = { "AudioPanel.addRiffToMpgAudioL3", "0" }; //cbox[4] + rbutton[15] riff für layer3
+	public final static String[] KEY_AudioPanel_addRiffToMpgAudioL3 = { "AudioPanel.addRiffToMpgAudioL3", "0" }; //cbox[4] + rbutton[15] riff fr layer3
 	public final static String[] KEY_AudioPanel_PitchValue = { "AudioPanel.PitchValue", "0" }; 
 	public final static String[] KEY_AudioPanel_NormalizeValue = { "AudioPanel.NormalizeValue", "98" }; 
 	public final static String[] KEY_AudioPanel_createDDWave = { "AudioPanel.createDDWave", "0" };
@@ -446,7 +446,7 @@
 			"PES (incl. MPEG Video)",
 			"MPEG-1 PS/SS (PES Container)",
 			"MPEG-2 PS/SS (PES Container)",
-			"PVA (PES Container of TT®)",
+			"PVA (PES Container of TT)",
 			"TS (generic PES Container)",
 			"PES (MPEG Audio first)",
 			"PES (private stream 1 first)",
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/common/Start.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/common/Start.java
--- src/net/sourceforge/dvb/projectx/common/Start.java	2005-12-30 15:32:52.000000000 +0100
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/common/Start.java	2008-08-21 11:23:56.000000000 +0200
@@ -207,8 +207,10 @@
 			/**
 			 * environment
 			 */
+			System.out.println("getJAVAEv");
 			environment = Common.getJavaEV(Common.getSettings().getInifile());
 
+			System.out.println("print");
 			for (int i = 0; i < environment.length; i++)
 				System.out.println(environment[i].toString());
 
@@ -251,11 +253,12 @@
 			/**
 			 * planned to disable ftp only, if commons-net is missing
 			 */
-			if ((str = Common.checkLibraryAccess()) != null)
+/*			if ((str = Common.checkLibraryAccess()) != null)
 			{
 				throw new Exception(str);
 				//System.out.println(ret);
 			}
+*/
 
 			System.out.println("Loading AC3 frames...");
 
@@ -296,10 +299,7 @@
 
 			else
 			{
-				if (!Common.getGuiInterface().isAvailable())
-					System.out.println("Stopped! Can't start GUI, Classes not available...");
-
-				else if (!Common.isCollectionListEmpty())
+				if (!Common.isCollectionListEmpty())
 				{
 					Common.getGuiInterface().addCollectionAtEnd();
 					Common.getGuiInterface().showActiveCollection(0);
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/io/IDDBufferedOutputStream.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/io/IDDBufferedOutputStream.java
--- src/net/sourceforge/dvb/projectx/io/IDDBufferedOutputStream.java	2006-03-25 16:40:42.000000000 +0100
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/io/IDDBufferedOutputStream.java	2006-12-16 14:28:39.000000000 +0100
@@ -526,7 +526,7 @@
 
         Common.renameTo(new File(aInfoName), nname);
 
-        // 2 Minuten - 120000ms (?) für CM dazuschummeln ;-)
+        // 2 Minuten - 120000ms (?) fr CM dazuschummeln ;-)
         nname.setLastModified(nname.lastModified() + 120000);
     }
    
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/parser/MainProcess.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/parser/MainProcess.java
--- src/net/sourceforge/dvb/projectx/parser/MainProcess.java	2006-03-25 16:16:26.000000000 +0100
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/parser/MainProcess.java	2007-06-15 17:56:27.000000000 +0200
@@ -1076,7 +1076,7 @@
 
 		job_processing.setSplitSize(splitsize);
 
-		Toolkit.getDefaultToolkit().beep();
+//		Toolkit.getDefaultToolkit().beep();
 	}
 
 }
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/parser/StreamConverter.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/parser/StreamConverter.java
--- src/net/sourceforge/dvb/projectx/parser/StreamConverter.java	2006-01-22 16:59:24.000000000 +0100
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/parser/StreamConverter.java	2006-12-16 14:29:15.000000000 +0100
@@ -829,7 +829,7 @@
 
 			switch (newID)
 			{
-			case 0xC0: //ändern
+			case 0xC0: //ndern
 				CommonParsing.setValue(PvaPacketHeader, 2, 1, !CommonParsing.BYTEREORDERING, PVA_MAINAUDIO);
 				CommonParsing.setValue(PvaPacketHeader, 3, 1, !CommonParsing.BYTEREORDERING, 0xFF & PacketCounter[PVA_MAINAUDIO]);
 				CommonParsing.setValue(PvaPacketHeader, 5, 1, !CommonParsing.BYTEREORDERING, 0x10);
@@ -842,10 +842,10 @@
 
 				return;
 
-			default: //ändern
+			default: //ndern
 				switch (0xF0 & newID)
 				{
-				case 0x90: //ttx ändern
+				case 0x90: //ttx ndern
 					countID = newID - 0x8C; 
 					break; 
 
@@ -1070,7 +1070,7 @@
 					time[0] = time[1];
 			}
 
-			switch (0xF0 & newID) //ändern
+			switch (0xF0 & newID) //ndern
 			{
 			case 0x80:
 				countID = newID - 0x6C; 
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/parser/StreamProcessAudio.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/parser/StreamProcessAudio.java
--- src/net/sourceforge/dvb/projectx/parser/StreamProcessAudio.java	2006-03-28 19:45:26.000000000 +0200
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/parser/StreamProcessAudio.java	2006-12-16 14:31:32.000000000 +0100
@@ -744,7 +744,7 @@
 								double ms3 = precount - vptsval[v], ms4 = time_counter - vtime[v];
 
 								if (Debug) 
-									System.out.println(" ö" + ms3 + "/" + ms4 + "/" + (ms4 - ms3));
+									System.out.println(" " + ms3 + "/" + ms4 + "/" + (ms4 - ms3));
 
 								if (!awrite && (double) Math.abs((time_counter - vtime[v]) - (precount - vptsval[v])) <= (double) audio.getFrameTimeLength() / 2.0 )
 								{
@@ -756,7 +756,7 @@
 									Common.getGuiInterface().showAVOffset("" + (int)(ms1 / 90) + "/" + (int)(ms2 / 90) + "/" + (int)((ms2 - ms1) / 90));
 
 									if (Debug) 
-										System.out.println(" ä" + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
+										System.out.println(" " + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
 								}
 							} 
 
@@ -775,7 +775,7 @@
 									Common.getGuiInterface().showAVOffset("" + (int)(ms1 / 90) + "/" + (int)(ms2 / 90) + "/" + (int)((ms2 - ms1) / 90));
 
 									if (Debug) 
-										System.out.println(" ü" + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
+										System.out.println(" " + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
 								}
 
 								/**
@@ -1073,7 +1073,7 @@
 									Common.getGuiInterface().showAVOffset("" + (int)(ms1 / 90) + "/" + (int)(ms2 / 90) + "/" + (int)((ms2 - ms1) / 90));
 
 									if (Debug) 
-										System.out.println(" §" + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
+										System.out.println(" " + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
 
 									awrite = true;
 									v += 2;
@@ -1090,7 +1090,7 @@
 									Common.getGuiInterface().showAVOffset("" + (int)(ms1 / 90) + "/" + (int)(ms2 / 90) + "/" + (int)((ms2 - ms1) / 90));
 
 									if (Debug) 
-										System.out.println(" ß" + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
+										System.out.println(" " + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
 
 									awrite = true;
 									v += 2;
@@ -1508,7 +1508,7 @@
 								double ms4 = time_counter - vtime[v];
 
 								if (Debug) 
-									System.out.println(" ö" + ms3 + "/" + ms4 + "/" + (ms4 - ms3));
+									System.out.println(" " + ms3 + "/" + ms4 + "/" + (ms4 - ms3));
 
 								if (!awrite && (double) Math.abs((time_counter - vtime[v]) -
 										(precount - vptsval[v]) ) <= (double)audio.getFrameTimeLength() / 2.0 )
@@ -1522,7 +1522,7 @@
 									Common.getGuiInterface().showAVOffset("" + (int)(ms1 / 90) + "/" + (int)(ms2 / 90) + "/" + (int)((ms2 - ms1) / 90));
 
 									if (Debug) 
-										System.out.println(" ä" + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
+										System.out.println(" " + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
 								}
 							} 
 
@@ -1542,7 +1542,7 @@
 									Common.getGuiInterface().showAVOffset("" + (int)(ms1 / 90) + "/" + (int)(ms2 / 90) + "/" + (int)((ms2 - ms1) / 90));
 
 									if (Debug) 
-										System.out.println(" ü" + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
+										System.out.println(" " + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
 								}
 
 								/**
@@ -1928,7 +1928,6 @@
 						int padding_counter = 1;						//count padding
 						long[] ins = { (long)time_counter, 0 };
 		
-						// solange nächster ptsval minus nächster framebeginn  ist größer der halben framezeit, füge stille ein
 						while (ptsval[x + 1] > (timeline - (audio.getFrameTimeLength() / 2.0)))
 						{
 							if (vptsdata && w < vptsval.length)
@@ -1959,7 +1958,7 @@
 									Common.getGuiInterface().showAVOffset("" + (int)(ms1 / 90) + "/" + (int)(ms2 / 90) + "/" + (int)((ms2 - ms1) / 90));
 
 									if (Debug) 
-										System.out.println(" §" + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
+										System.out.println(" " + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
 
 									awrite = true;
 									v += 2;
@@ -1976,7 +1975,7 @@
 									Common.getGuiInterface().showAVOffset("" + (int)(ms1 / 90) + "/" + (int)(ms2 / 90) + "/" + (int)((ms2 - ms1) / 90));
 
 									if (Debug) 
-										System.out.println(" ß" + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
+										System.out.println(" " + ms1 + "/" + ms2 + "/" + (ms2 - ms1));
 
 									awrite = true;
 									v += 2;
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/subtitle/Teletext.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/subtitle/Teletext.java
--- src/net/sourceforge/dvb/projectx/subtitle/Teletext.java	2006-03-26 12:03:26.000000000 +0200
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/subtitle/Teletext.java	2006-12-16 14:29:26.000000000 +0100
@@ -472,7 +472,7 @@
 		for (int s = 0; s < chars.length; s++) 
 			test += (char)(chars[s]>>>8);
 
-		// ab 3 paritätsfehlern zeile droppen
+		// ab 3 parittsfehlern zeile droppen
 		if (checkParity && parity_error > 0)
 		{
 			String msg = "!> line " + row + ", parity check failed at " + parity_error + " of " + len + " characters: '" + test + "'";
@@ -652,7 +652,7 @@
 			continue loopi; 
 		}
 
-		// ab 3 paritätsfehlern zeile droppen
+		// ab 3 parittsfehlern zeile droppen
 		if (checkParity && parity_error > 0)
 		{
 			String msg = "!> line " + row + ", parity check failed at " + parity_error + " of " + len + " characters: '" + text + "'";
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/video/MpvDecoder.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/video/MpvDecoder.java
--- src/net/sourceforge/dvb/projectx/video/MpvDecoder.java	2006-03-03 20:35:06.000000000 +0100
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/video/MpvDecoder.java	2006-12-20 23:45:39.000000000 +0100
@@ -71,8 +71,8 @@
 
 public class MpvDecoder extends Object {
 
-	private IDCTRefNative idct;
-	private IDCTSseNative idctsse;
+//	private IDCTRefNative idct;
+//	private IDCTSseNative idctsse;
 
 	private int[] pixels2 = new int[512 * 288];
 	private int[] pixels = new int[250]; //full pixel data
@@ -107,14 +107,14 @@
 	{
 		Arrays.fill(pixels2, 0xFF505050);
 
-		idct = new IDCTRefNative();
-		idctsse = new IDCTSseNative();
+//		idct = new IDCTRefNative();
+//		idctsse = new IDCTSseNative();
 
-		if (IDCTRefNative.isLibraryLoaded())
-			idct.init();
+//		if (IDCTRefNative.isLibraryLoaded())
+//			idct.init();
 
-		if (IDCTRefNative.isLibraryLoaded() || IDCTSseNative.isLibraryLoaded())
-			acceleration = true;
+//		if (IDCTRefNative.isLibraryLoaded() || IDCTSseNative.isLibraryLoaded())
+//			acceleration = true;
 	}
 
 	/**
@@ -149,35 +149,35 @@
 private int ERROR_CODE1=0;
 
 /* extension start code IDs */
-final int SEQUENCE_EXTENSION_ID=1;
-final int SEQUENCE_DISPLAY_EXTENSION_ID=2;
-final int QUANT_MATRIX_EXTENSION_ID=3;
-final int COPYRIGHT_EXTENSION_ID=4;
-final int PICTURE_DISPLAY_EXTENSION_ID=7;
-final int PICTURE_CODING_EXTENSION_ID=8;
-final int ZIG_ZAG=0;
-final int MB_WEIGHT=32;
-final int MB_CLASS4=64;
-final int MC_FIELD=1;
-final int MC_FRAME=2;
-final int MC_16X8=2;
-final int MC_DMV=3;
-final int MV_FIELD=0;
-final int MV_FRAME=1;
-final int I_TYPE=1;
-final int P_TYPE=2;
-final int B_TYPE=3;
-final int TOP_FIELD=1;
-final int BOTTOM_FIELD=2;
-final int FRAME_PICTURE=3;
-final int MACROBLOCK_INTRA=1;
-final int MACROBLOCK_PATTERN=2;
-final int MACROBLOCK_MOTION_BACKWARD=4;
-final int MACROBLOCK_MOTION_FORWARD=8;
-final int MACROBLOCK_QUANT=16;
-final int CHROMA420=1;
-final int CHROMA422=2;
-final int CHROMA444=3;
+final byte SEQUENCE_EXTENSION_ID=1;
+final byte SEQUENCE_DISPLAY_EXTENSION_ID=2;
+final byte QUANT_MATRIX_EXTENSION_ID=3;
+final byte COPYRIGHT_EXTENSION_ID=4;
+final byte PICTURE_DISPLAY_EXTENSION_ID=7;
+final byte PICTURE_CODING_EXTENSION_ID=8;
+final byte ZIG_ZAG=0;
+final byte MB_WEIGHT=32;
+final byte MB_CLASS4=64;
+final byte MC_FIELD=1;
+final byte MC_FRAME=2;
+final byte MC_16X8=2;
+final byte MC_DMV=3;
+final byte MV_FIELD=0;
+final byte MV_FRAME=1;
+final byte I_TYPE=1;
+final byte P_TYPE=2;
+final byte B_TYPE=3;
+final byte TOP_FIELD=1;
+final byte BOTTOM_FIELD=2;
+final byte FRAME_PICTURE=3;
+final byte MACROBLOCK_INTRA=1;
+final byte MACROBLOCK_PATTERN=2;
+final byte MACROBLOCK_MOTION_BACKWARD=4;
+final byte MACROBLOCK_MOTION_FORWARD=8;
+final byte MACROBLOCK_QUANT=16;
+final byte CHROMA420=1;
+final byte CHROMA422=2;
+final byte CHROMA444=3;
 final int IDCT_CLIP_TABLE_OFFSET=512;
 
 private int q_scale_type=0;  //1
@@ -742,18 +742,18 @@
 	{-1,0},
 	{MACROBLOCK_MOTION_FORWARD,3},
 	{MACROBLOCK_PATTERN,2}, {MACROBLOCK_PATTERN,2},
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN,1}, 
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN,1},
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN,1}, 
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN,1}
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN),1}, 
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN),1},
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN),1}, 
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN),1}
 };
 
 /* Table B-3, macroblock_type in P-pictures, codes 000001..00011x */
 final byte PMBtab1[][] = {
 	{-1,0},
-	{MACROBLOCK_QUANT|MACROBLOCK_INTRA,6},
-	{MACROBLOCK_QUANT|MACROBLOCK_PATTERN,5}, {MACROBLOCK_QUANT|MACROBLOCK_PATTERN,5},
-	{MACROBLOCK_QUANT|MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN,5}, {MACROBLOCK_QUANT|MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN,5},
+	{(byte)(MACROBLOCK_QUANT|MACROBLOCK_INTRA),6},
+	{(byte)(MACROBLOCK_QUANT|MACROBLOCK_PATTERN),5}, {(byte)(MACROBLOCK_QUANT|MACROBLOCK_PATTERN),5},
+	{(byte)(MACROBLOCK_QUANT|MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN),5}, {(byte)(MACROBLOCK_QUANT|MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN),5},
 	{MACROBLOCK_INTRA,5}, {MACROBLOCK_INTRA,5}
 };
 
@@ -761,32 +761,32 @@
 final byte BMBtab0[][] = {
 	{-1,0}, 
 	{-1,0},
-	{MACROBLOCK_MOTION_FORWARD,4},
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN,4},
-	{MACROBLOCK_MOTION_BACKWARD,3}, 
-	{MACROBLOCK_MOTION_BACKWARD,3},
-	{MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN,3}, 
-	{MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN,3},
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD,2}, 
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD,2},
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD,2}, 
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD,2},
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN,2},
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN,2},
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN,2},
-	{MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN,2}
+	{(byte)(MACROBLOCK_MOTION_FORWARD),4},
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN),4},
+	{(byte)(MACROBLOCK_MOTION_BACKWARD),3}, 
+	{(byte)(MACROBLOCK_MOTION_BACKWARD),3},
+	{(byte)(MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN),3}, 
+	{(byte)(MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN),3},
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD),2}, 
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD),2},
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD),2}, 
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD),2},
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN),2},
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN),2},
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN),2},
+	{(byte)(MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN),2}
 };
 
 /* Table B-4, macroblock_type in B-pictures, codes 000001..00011x */
 final byte BMBtab1[][] = {
 	{-1,0},
-	{MACROBLOCK_QUANT|MACROBLOCK_INTRA,6},
-	{MACROBLOCK_QUANT|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN,6},
-	{MACROBLOCK_QUANT|MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN,6},
-	{MACROBLOCK_QUANT|MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN,5},
-	{MACROBLOCK_QUANT|MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN,5},
-	{MACROBLOCK_INTRA,5}, 
-	{MACROBLOCK_INTRA,5}
+	{(byte)(MACROBLOCK_QUANT|MACROBLOCK_INTRA),6},
+	{(byte)(MACROBLOCK_QUANT|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN),6},
+	{(byte)(MACROBLOCK_QUANT|MACROBLOCK_MOTION_FORWARD|MACROBLOCK_PATTERN),6},
+	{(byte)(MACROBLOCK_QUANT|MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN),5},
+	{(byte)(MACROBLOCK_QUANT|MACROBLOCK_MOTION_FORWARD|MACROBLOCK_MOTION_BACKWARD|MACROBLOCK_PATTERN),5},
+	{(byte)(MACROBLOCK_INTRA),5}, 
+	{(byte)(MACROBLOCK_INTRA),5}
 };
 
 final double frame_rate_Table[] = {
@@ -2202,33 +2202,33 @@
 		//form_predictions(bx, by, macroblock_type, motion_type, PMV, motion_vertical_field_select, dmvector);
 
 
-	if (IDCTSseNative.isLibraryLoaded())
-	{
-		/* copy or add block data into picture */
-		for (comp=0; comp<block_count; comp++)
-		{
-			/* ISO/IEC 13818-2 section Annex A: inverse DCT */
-			idctsse.referenceIDCT(block[comp]);
-
-			/* ISO/IEC 13818-2 section 7.6.8: Adding prediction and coefficient data */
-			Add_Block(comp, bx, by, dct_type, (macroblock_type[0] & MACROBLOCK_INTRA)==0);
-		}
-	}
-
-	else if (IDCTRefNative.isLibraryLoaded())
-	{
-		/* copy or add block data into picture */
-		for (comp=0; comp<block_count; comp++)
-		{
-			/* ISO/IEC 13818-2 section Annex A: inverse DCT */
-			idct.referenceIDCT(block[comp]);
-
-			/* ISO/IEC 13818-2 section 7.6.8: Adding prediction and coefficient data */
-			Add_Block(comp, bx, by, dct_type, (macroblock_type[0] & MACROBLOCK_INTRA)==0);
-		}
-	}
-
-	else
+//	if (IDCTSseNative.isLibraryLoaded())
+//	{
+//		/* copy or add block data into picture */
+//		for (comp=0; comp<block_count; comp++)
+//		{
+//			/* ISO/IEC 13818-2 section Annex A: inverse DCT */
+//			idctsse.referenceIDCT(block[comp]);
+//
+//			/* ISO/IEC 13818-2 section 7.6.8: Adding prediction and coefficient data */
+//			Add_Block(comp, bx, by, dct_type, (macroblock_type[0] & MACROBLOCK_INTRA)==0);
+//		}
+//	}
+//
+//	else if (IDCTRefNative.isLibraryLoaded())
+//	{
+//		/* copy or add block data into picture */
+//		for (comp=0; comp<block_count; comp++)
+//		{
+//			/* ISO/IEC 13818-2 section Annex A: inverse DCT */
+//			idct.referenceIDCT(block[comp]);
+//
+//			/* ISO/IEC 13818-2 section 7.6.8: Adding prediction and coefficient data */
+//			Add_Block(comp, bx, by, dct_type, (macroblock_type[0] & MACROBLOCK_INTRA)==0);
+//		}
+//	}
+//
+//	else
 	{
 		/* copy or add block data into picture */
 		for (comp=0; comp<block_count; comp++)
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/xinput/DirType.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/xinput/DirType.java
--- src/net/sourceforge/dvb/projectx/xinput/DirType.java	2005-12-17 16:14:56.000000000 +0100
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/xinput/DirType.java	2006-12-16 14:54:49.000000000 +0100
@@ -45,8 +45,8 @@
 	/**
 	 * Directory on a ftp server
 	 */
-	public final static DirType FTP_DIR = new DirType(1, "FTP_DIR",
-			net.sourceforge.dvb.projectx.xinput.ftp.XInputDirectoryImpl.class);
+//	public final static DirType FTP_DIR = new DirType(1, "FTP_DIR",
+//			net.sourceforge.dvb.projectx.xinput.ftp.XInputDirectoryImpl.class);
 
 	/**
 	 * Directory on a harddisk of a topfield receiver in raw format
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/xinput/FileType.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/xinput/FileType.java
--- src/net/sourceforge/dvb/projectx/xinput/FileType.java	2005-12-17 16:15:02.000000000 +0100
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/xinput/FileType.java	2006-12-16 14:54:38.000000000 +0100
@@ -45,8 +45,8 @@
 	/**
 	 * File on a ftp server
 	 */
-	public final static FileType FTP = new FileType(1, "FTP",
-			net.sourceforge.dvb.projectx.xinput.ftp.XInputFileImpl.class);
+//	public final static FileType FTP = new FileType(1, "FTP",
+//			net.sourceforge.dvb.projectx.xinput.ftp.XInputFileImpl.class);
 
 	/**
 	 * File on a harddisk of a topfield receiver in raw format
diff -bru --strip-trailing-cr src/net/sourceforge/dvb/projectx/xinput/XInputStream.java /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/xinput/XInputStream.java
--- src/net/sourceforge/dvb/projectx/xinput/XInputStream.java	2006-03-19 12:13:54.000000000 +0100
+++ /dream/tools/ProjectX_Source_0.90.4_hack/src/net/sourceforge/dvb/projectx/xinput/XInputStream.java	2006-12-16 14:56:11.000000000 +0100
@@ -31,8 +31,6 @@
 import java.io.InputStream;
 import java.io.BufferedInputStream;
 
-import net.sourceforge.dvb.projectx.xinput.ftp.XInputFileImpl;
-
 import net.sourceforge.dvb.projectx.common.Common;
 import net.sourceforge.dvb.projectx.common.Keys;
 
@@ -42,7 +40,6 @@
 
 	private byte[] buffer = new byte[1];
 
-	private XInputFileImpl xInputFile = null;
 
 	/**
 	 * Create stream, which is able to handle special needs of the xinput package.
@@ -55,9 +52,6 @@
 		super(Common.getSettings().getBooleanProperty(Keys.KEY_additionalInputBuffer) ? new BufferedInputStream(aIs, 1048576) : aIs);
 	}
 
-	public void setFtpFile(XInputFileImpl aIf) {
-		xInputFile = aIf;
-	}
 
 	/**
 	 * Takes care, that always the full amount of data is read (if possible).
@@ -143,12 +137,6 @@
 	public final void close() throws IOException {
 		if (debug) System.out.println("Enter XInputStream.close()");
 
-		if (xInputFile != null)
-		{
-			xInputFile.randomAccessClose();
-			xInputFile = null;
-		}
-
 		super.close();
 		if (debug) System.out.println("Leave XInputStream.close()");
 	}
